<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace paddle\Paddle\Models\Shared;


/**
 * SubscriptionScheduledChange - Change that's scheduled to be applied to a subscription. Use the pause subscription, cancel subscription, and resume subscription operations to create scheduled changes. `null` if no scheduled changes.
 * 
 * @package paddle\Paddle\Models\Shared
 * @access public
 */
class SubscriptionScheduledChange
{
    /**
     * Kind of change that's scheduled to be applied to this subscription.
     * 
     * @var ?\paddle\Paddle\Models\Shared\SubscriptionScheduledChangeAction $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\SubscriptionScheduledChangeAction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SubscriptionScheduledChangeAction $action = null;
    
    /**
     * Timestamp following the RFC 3339 standard
     * 
     * @var ?\DateTime $effectiveAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('effective_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveAt = null;
    
    /**
     * RFC 3339 datetime string.
     * 
     * @var ?\DateTime $resumeAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('resume_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $resumeAt = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->effectiveAt = null;
		$this->resumeAt = null;
	}
}
