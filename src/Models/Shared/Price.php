<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace paddle\Paddle\Models\Shared;


/**
 * Price - Represents a price entity.
 * 
 * @package paddle\Paddle\Models\Shared
 * @access public
 */
class Price
{
    /**
     * How often this price should be charged. `null` if price is non-recurring (one-time).
     * 
     * @var ?\paddle\Paddle\Models\Shared\Period2 $billingCycle
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing_cycle')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\Period2')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Period2 $billingCycle = null;
    
    /**
     * Your own structured key-value data.
     * 
     * @var ?\paddle\Paddle\Models\Shared\CustomData $customData
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_data')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\CustomData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomData $customData = null;
    
    /**
     * Short description for this price. Typically describes how often the related product bills.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Unique Paddle ID for this price, prefixed with `pri_`.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Unique Paddle ID for this product, prefixed with `pro_`.
     * 
     * @var ?string $productId
     */
	#[\JMS\Serializer\Annotation\SerializedName('product_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\PriceQuantity')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PriceQuantity $quantity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $status = null;
    
    /**
     * How tax is calculated for this price.
     * 
     * @var ?\paddle\Paddle\Models\Shared\TaxMode1 $taxMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_mode')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\TaxMode1>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaxMode1 $taxMode = null;
    
    /**
     * Trial period for the product related to this price. The billing cycle begins once the trial period is over. `null` for no trial period. Requires `billing_cycle`.
     * 
     * @var ?\paddle\Paddle\Models\Shared\Period2 $trialPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('trial_period')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\Period2')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Period2 $trialPeriod = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('unit_price')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\Money2')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money2 $unitPrice = null;
    
    /**
     * List of unit price overrides. Use to override the base price with a custom price and currency for a country or group of countries.
     * 
     * @var ?array<\paddle\Paddle\Models\Shared\UnitPriceOverride> $unitPriceOverrides
     */
	#[\JMS\Serializer\Annotation\SerializedName('unit_price_overrides')]
    #[\JMS\Serializer\Annotation\Type('array<paddle\Paddle\Models\Shared\UnitPriceOverride>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $unitPriceOverrides = null;
    
	public function __construct()
	{
		$this->billingCycle = null;
		$this->customData = null;
		$this->description = null;
		$this->id = null;
		$this->productId = null;
		$this->quantity = null;
		$this->status = null;
		$this->taxMode = null;
		$this->trialPeriod = null;
		$this->unitPrice = null;
		$this->unitPriceOverrides = null;
	}
}
