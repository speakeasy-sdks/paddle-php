<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace paddle\Paddle\Models\Shared;


/**
 * Event - Represents an event entity.
 * 
 * @package paddle\Paddle\Models\Shared
 * @access public
 */
class Event
{
    /**
     * New or changed entity.
     * 
     * @var ?\paddle\Paddle\Models\Shared\EventData $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\EventData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventData $data = null;
    
    /**
     * Unique Paddle ID for this event, prefixed with `evt_`.
     * 
     * @var ?string $eventId
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventId = null;
    
    /**
     * Type of event sent by Paddle, in the format `entity.event_type`.
     * 
     * @var ?string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventType = null;
    
    /**
     * Unique Paddle ID for this notification, prefixed with `ntf_`.
     * 
     * @var ?string $notificationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('notification_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notificationId = null;
    
    /**
     * RFC 3339 datetime string.
     * 
     * @var ?\DateTime $occurredAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('occurred_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $occurredAt = null;
    
	public function __construct()
	{
		$this->data = null;
		$this->eventId = null;
		$this->eventType = null;
		$this->notificationId = null;
		$this->occurredAt = null;
	}
}
