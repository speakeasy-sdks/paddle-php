<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace paddle\Paddle\Models\Shared;


class TransactionPaymentAttempt
{
    /**
     * Amount for collection in the lowest denomination of a currency (e.g. cents for USD).
     * 
     * @var ?string $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $amount = null;
    
    /**
     * RFC 3339 datetime string.
     * 
     * @var ?\DateTime $capturedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('captured_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $capturedAt = null;
    
    /**
     * RFC 3339 datetime string of when this entity was created. Set automatically by Paddle.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * Reason why a payment attempt failed. `null` if payment captured successfully.
     * 
     * @var ?\paddle\Paddle\Models\Shared\ErrorCode $errorCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_code')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\ErrorCode>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ErrorCode $errorCode = null;
    
    /**
     * Information about the payment method used for a payment attempt.
     * 
     * @var ?\paddle\Paddle\Models\Shared\MethodDetails $methodDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('method_details')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\MethodDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MethodDetails $methodDetails = null;
    
    /**
     * UUID for this payment attempt.
     * 
     * @var ?string $paymentAttemptId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_attempt_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentAttemptId = null;
    
    /**
     * Status of this payment attempt.
     * 
     * @var ?\paddle\Paddle\Models\Shared\StatusPaymentAttempt $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\StatusPaymentAttempt>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StatusPaymentAttempt $status = null;
    
    /**
     * UUID for the stored payment method used for this payment attempt.
     * 
     * @var ?string $storedPaymentMethodId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stored_payment_method_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storedPaymentMethodId = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->capturedAt = null;
		$this->createdAt = null;
		$this->errorCode = null;
		$this->methodDetails = null;
		$this->paymentAttemptId = null;
		$this->status = null;
		$this->storedPaymentMethodId = null;
	}
}
