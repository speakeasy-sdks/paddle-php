<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace paddle\Paddle\Models\Shared;


/**
 * Adjustment2 - Represents an adjustment entity.
 * 
 * @package paddle\Paddle\Models\Shared
 * @access public
 */
class Adjustment2
{
    /**
     * How this adjustment impacts the related transaction. `refund` adjustments must be approved by Paddle, and are created with the status `pending_approval`. `chargeback` and `chargeback_warning` adjustments are created automatically by Paddle.
     * 
     * @var ?\paddle\Paddle\Models\Shared\SchemaAction $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\SchemaAction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SchemaAction $action = null;
    
    /**
     * RFC 3339 datetime string of when this entity was created. Set automatically by Paddle.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * Whether this adjustment was applied to the related customer's credit balance. Only returned for `credit` adjustments.
     * 
     * 
     * `false` when the related transaction `collection_mode` is `manual` and its `status` is `billed`. The adjustment is used
     * to reduce the `balance` due on the the transaction. 
     * 
     * `true` for automatically-collected transactions and `completed` 
     * manually-collected transactions.
     * 
     * @var ?bool $creditAppliedToBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('credit_applied_to_balance')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $creditAppliedToBalance = null;
    
    /**
     * Supported three-letter ISO 4217 currency code.
     * 
     * @var ?\paddle\Paddle\Models\Shared\CurrencyCode2 $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency_code')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\CurrencyCode2>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CurrencyCode2 $currencyCode = null;
    
    /**
     * Unique Paddle ID for this customer entity, prefixed with `ctm_`.
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * Unique Paddle ID for this adjustment entity, prefixed with `adj_`.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * List of items on this adjustment.
     * 
     * @var ?array<\paddle\Paddle\Models\Shared\AdjustmentItem> $items
     */
	#[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('array<paddle\Paddle\Models\Shared\AdjustmentItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $items = null;
    
    /**
     * Breakdown of how this adjustment affects your payout balance.
     * 
     * @var ?\paddle\Paddle\Models\Shared\AdjustmentPayoutTotals $payoutTotals
     */
	#[\JMS\Serializer\Annotation\SerializedName('payout_totals')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\AdjustmentPayoutTotals')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdjustmentPayoutTotals $payoutTotals = null;
    
    /**
     * Why this adjustment was created. Appears in the Paddle Dashboard. Retained for record-keeping purposes.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * Status of this adjustment. Set automatically by Paddle. 
     * 
     * 
     * `refund` adjustments must be approved by Paddle, and are created with the status `pending_approval` 
     * until they move to `approved` or `rejected` on review.  `credit` adjustments are created with the status `approved`.
     * 
     * @var ?\paddle\Paddle\Models\Shared\SchemaStatusAdjustment $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<paddle\Paddle\Models\Shared\SchemaStatusAdjustment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SchemaStatusAdjustment $status = null;
    
    /**
     * Unique Paddle ID for this subscription entity, prefixed with `sub_`.
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscription_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
    /**
     * Breakdown of the total for an adjustment.
     * 
     * @var ?\paddle\Paddle\Models\Shared\AdjustmentTotals $totals
     */
	#[\JMS\Serializer\Annotation\SerializedName('totals')]
    #[\JMS\Serializer\Annotation\Type('paddle\Paddle\Models\Shared\AdjustmentTotals')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdjustmentTotals $totals = null;
    
    /**
     * Unique Paddle ID for this transaction entity, prefixed with `txn_`.
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
    /**
     * RFC 3339 datetime string of when this entity was updated. Set automatically by Paddle.
     * 
     * @var ?\DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->createdAt = null;
		$this->creditAppliedToBalance = null;
		$this->currencyCode = null;
		$this->customerId = null;
		$this->id = null;
		$this->items = null;
		$this->payoutTotals = null;
		$this->reason = null;
		$this->status = null;
		$this->subscriptionId = null;
		$this->totals = null;
		$this->transactionId = null;
		$this->updatedAt = null;
	}
}
